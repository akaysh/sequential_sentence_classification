{"review": [{"text_id": "ryl8Oq-53X", "sid": 0, "sentence": "This paper addresses the important / open problem of graph generation, and specifically in a conditional/transductive setting."}, {"text_id": "ryl8Oq-53X", "sid": 1, "sentence": "Graph generations is a new topic, it is difficult, and has many important applications, for instance generating new molecules for drug development."}, {"text_id": "ryl8Oq-53X", "sid": 2, "sentence": "As stated by the authors, this is a relatively open field: there are not many papers in this area, with most approaches today resorting to domain specific encodinings, or \"flattening\" of graphs into sequences to then allow for the use recurrence (like in MT); this which per se is an rather coarse approximation to graph topology representations, thus fully motivating the need for new solutions that take graph-structure into account."}, {"text_id": "ryl8Oq-53X", "sid": 3, "sentence": "The setting / application of this method to graph synthesis of suspicious behaviours of network users, to detect intrusion, effectively a Zero-shot problem, is super interesting."}, {"text_id": "ryl8Oq-53X", "sid": 4, "sentence": "The main architectural contribution of this paper are graph-deconvolutions, practically a graph-equivalent of CNN's depth-to-space - achieved by means of transposed structural matrix multiplication of the hidden GNN (graph-NN) activation - simple, reasonable and effective."}, {"text_id": "ryl8Oq-53X", "sid": 5, "sentence": "While better than most of the baseline methods, the N^2 memory/computational complexity is not bad, but still too high to scale to very large graphs."}, {"text_id": "ryl8Oq-53X", "sid": 6, "sentence": "Results are provided on relatively new tasks so it's hard to compare fully to previous methods, but the authors do make an attempt to provide comparisons on synthetic graphs and intrusion detection data."}, {"text_id": "ryl8Oq-53X", "sid": 7, "sentence": "The authors do published their code on GitHub with a link to the datasets as well."}, {"text_id": "ryl8Oq-53X", "sid": 8, "sentence": "As previously mentioned in public comments on this forum, some points in the paper are not very clear; specifically regarding the loss function, the definition of \"edge-to-edge\" convolutions and generally the architectural choice related to the conditional GAN discriminator."}, {"text_id": "ryl8Oq-53X", "sid": 9, "sentence": "Clarifications of these points, and more in general the philosophy behind the architectural choices made, would make this paper a much clearer accept."}, {"text_id": "ryl8Oq-53X", "sid": 10, "sentence": "Thank you!"}, {"text_id": "ryl8Oq-53X", "sid": 11, "sentence": "ps // next my previous public comments, in detail, repeated ..."}, {"text_id": "ryl8Oq-53X", "sid": 12, "sentence": "--"}, {"text_id": "ryl8Oq-53X", "sid": 13, "sentence": "- the general architecture, and specifically the logic behind the edge-to-edge convolution, and generally the different blocks in fig.1 \"graph translator\"."}, {"text_id": "ryl8Oq-53X", "sid": 14, "sentence": "- how exactly do you do a L1 loss on graphs? I'd have to assume the topology of the graph is unchanged between Gy and T(Gx) ~ and then maybe take L1 of weight matrix? But then is this general enough ~ given your stated goal of modeling different topologies? Either ways, more explanation / and perhaps equations to clarify this loss would be very helpful."}, {"text_id": "ryl8Oq-53X", "sid": 15, "sentence": "- why do you need a conditional GAN discriminator, if you already model similarity by L1?"}, {"text_id": "ryl8Oq-53X", "sid": 16, "sentence": "Typically one would use a GAN-D() to model \"proximity\" to the source-distribution, and then a similarity loss (L1 in your case) to model \"proximity\" to the actual input sample, in the case of trasductional domains."}, {"text_id": "ryl8Oq-53X", "sid": 17, "sentence": "Instead here you seem to suggest to use L1 and GAN to do basically the same thing, or with significant overlap anyways."}, {"text_id": "ryl8Oq-53X", "sid": 18, "sentence": "This is confusing to me."}, {"text_id": "ryl8Oq-53X", "sid": 19, "sentence": "Please explain the logic for this architectural choice."}, {"text_id": "ryl8Oq-53X", "sid": 20, "sentence": "-  could you please explain the setting for the \u201cgold standard\u201d experiment. I'd have to assume, for instance, you train a GNN in a supervised way by using both source (non-suspicious) and target (suspicious) behaviour, and label accordingly? That said I am not 100% sure of this problem setting."}], "reviewlabels": [{"text_id": "ryl8Oq-53X", "sid": 0, "labels": {"coarse": "Structuring", "fine": "Structuring.Summary", "asp": "", "pol": ""}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 1, "labels": {"coarse": "Structuring", "fine": "Structuring.Summary", "asp": "", "pol": ""}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 2, "labels": {"coarse": "Structuring", "fine": "Structuring.Summary", "asp": "", "pol": ""}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 3, "labels": {"coarse": "Structuring", "fine": "Structuring.Summary", "asp": "", "pol": ""}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 4, "labels": {"coarse": "Structuring", "fine": "Structuring.Summary", "asp": "", "pol": ""}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 5, "labels": {"coarse": "Evaluative", "fine": "Evaluative", "asp": "Soundness/Correctness", "pol": "N-Negative"}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 6, "labels": {"coarse": "Evaluative", "fine": "Evaluative", "asp": "Substance", "pol": "P-Positive"}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 7, "labels": {"coarse": "Evaluative", "fine": "Evaluative", "asp": "Replicability", "pol": "P-Positive"}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 8, "labels": {"coarse": "Evaluative", "fine": "Evaluative", "asp": "Replicability", "pol": "N-Negative"}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 9, "labels": {"coarse": "Request", "fine": "Request.Explanation", "asp": "Replicability", "pol": "N-Negative"}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 10, "labels": {"coarse": "Social", "fine": "Social", "asp": "", "pol": ""}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 11, "labels": {"coarse": "Structuring", "fine": "Structuring.Heading", "asp": "", "pol": ""}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 12, "labels": {"coarse": "Structuring", "fine": "Structuring.Heading", "asp": "", "pol": ""}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 13, "labels": {"coarse": "Request", "fine": "Request.Explanation", "asp": "Replicability", "pol": "N-Negative"}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 14, "labels": {"coarse": "Request", "fine": "Request.Explanation", "asp": "Replicability", "pol": "N-Negative"}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 15, "labels": {"coarse": "Request", "fine": "Request.Explanation", "asp": "Soundness/Correctness", "pol": "N-Negative"}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 16, "labels": {"coarse": "Fact", "fine": "Fact", "asp": "", "pol": ""}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 17, "labels": {"coarse": "Evaluative", "fine": "Evaluative", "asp": "Soundness/Correctness", "pol": "N-Negative"}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 18, "labels": {"coarse": "Evaluative", "fine": "Evaluative", "asp": "Soundness/Correctness", "pol": "N-Negative"}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 19, "labels": {"coarse": "Request", "fine": "Request.Explanation", "asp": "Soundness/Correctness", "pol": "N-Negative"}, "secondarylabels": [], "merge-with-prior": false}, {"text_id": "ryl8Oq-53X", "sid": 20, "labels": {"coarse": "Request", "fine": "Request.Explanation", "asp": "Substance", "pol": "N-Negative"}, "secondarylabels": [], "merge-with-prior": false}], "rebuttal": [{"text_id": "SJlERxAm67", "sid": 0, "sentence": "Dear Reviewer:"}, {"text_id": "SJlERxAm67", "sid": 1, "sentence": "Thanks very much for your comments and questions. We would like to explain them in detail and modify our paper accordingly."}, {"text_id": "SJlERxAm67", "sid": 2, "sentence": "----------------------------------------------------------------------------"}, {"text_id": "SJlERxAm67", "sid": 3, "sentence": "Q: First, the general architecture, and specifically the logic behind the edge-to-edge convolution, and generally the different blocks in fig.1 \"graph translator\"."}, {"text_id": "SJlERxAm67", "sid": 4, "sentence": "A: General architecture: The whole framework includes a translator and a discriminator."}, {"text_id": "SJlERxAm67", "sid": 5, "sentence": "(1) Translator."}, {"text_id": "SJlERxAm67", "sid": 6, "sentence": "Translator consists of an encoder, a decoder, and a skip network, which first learn the representation of the graph and then decode it back to the target graph."}, {"text_id": "SJlERxAm67", "sid": 7, "sentence": "See details in the third part of the answer."}, {"text_id": "SJlERxAm67", "sid": 8, "sentence": "(2) Discriminator."}, {"text_id": "SJlERxAm67", "sid": 9, "sentence": "Our discriminator aims to classify the generated graphs and the real target graphs given the input graph."}, {"text_id": "SJlERxAm67", "sid": 10, "sentence": "(3) The translator and discriminator are trained together, and the final goal is that the discriminator cannot distinguish the generated graphs and real target graphs."}, {"text_id": "SJlERxAm67", "sid": 11, "sentence": "After training such a model, the translator will be used in the test phase."}, {"text_id": "SJlERxAm67", "sid": 12, "sentence": "The logic behind edge-to-edge convolution:"}, {"text_id": "SJlERxAm67", "sid": 13, "sentence": "(1) Generally speaking, the purpose of edge-to-edge convolution layers is to aggregate the neighborhood information of nodes."}, {"text_id": "SJlERxAm67", "sid": 14, "sentence": "Specifically, the n-th edge-to-edge convolution layer aggregates the n-th hop connection information of nodes related to each edge."}, {"text_id": "SJlERxAm67", "sid": 15, "sentence": "(2) Different from image convolution, for each hidden channel, we have two filters, one is a column vector while the other is a row vector."}, {"text_id": "SJlERxAm67", "sid": 16, "sentence": "To learn the nth hop information of edge <i,j>, row filter aggregates all the (n-1)-th hop information of outgoing edges of node i and column filter aggregates all the (n-1)-th hop information of incoming edges of node j."}, {"text_id": "SJlERxAm67", "sid": 17, "sentence": "(3)  Edge-to-edge layers are important to extract some higher-level graph features, e.g., the n-hop reachability from a node to another; n-hop in-degree and out-degree, and many other higher-order patterns."}, {"text_id": "SJlERxAm67", "sid": 18, "sentence": "Different blocks in the graph translator:"}, {"text_id": "SJlERxAm67", "sid": 19, "sentence": "Translator consists of an encoder, a decoder, and a skip network."}, {"text_id": "SJlERxAm67", "sid": 20, "sentence": "(1) Encoder."}, {"text_id": "SJlERxAm67", "sid": 21, "sentence": "The encoder does n-hop edge information aggregation from the input graphs using edge-to-edge layers and then uses the edge-to-node layer to learn the latent representation of nodes."}, {"text_id": "SJlERxAm67", "sid": 22, "sentence": "(2) Decoder."}, {"text_id": "SJlERxAm67", "sid": 23, "sentence": "Reversely, the graph decoder first uses node-to-edge layers to decode the node representations to aggregated edge information and then further decode that into adjacency matrix, which is the final generated graphs."}, {"text_id": "SJlERxAm67", "sid": 24, "sentence": "(3) Skip-network."}, {"text_id": "SJlERxAm67", "sid": 25, "sentence": "Over the encoder-decoder framework, we also added skip-network (the black line of Fig.1) which can directly map the edge aggregation information in every hop from the input graph to the output graph so that can preserve the local information in every resolution (i.e., every hop)."}, {"text_id": "SJlERxAm67", "sid": 26, "sentence": "----------------------------------------------------------------------------"}, {"text_id": "SJlERxAm67", "sid": 27, "sentence": "Q: how exactly do you do a L1 loss on graphs? I'd have to assume the topology of the graph is unchanged between Gy and T(Gx) ~ and then maybe take L1 of weight matrix? But then is this general enough ~ given your stated goal of modeling different topologies?"}, {"text_id": "SJlERxAm67", "sid": 28, "sentence": "Either ways, more explanation / and perhaps equations to clarify this loss would be very helpful."}, {"text_id": "SJlERxAm67", "sid": 29, "sentence": "A: (1) L1 norm is applied to the weight matrix."}, {"text_id": "SJlERxAm67", "sid": 30, "sentence": "Our methodology is still general enough which is achieved by a trade-off between L1 loss and adversarial loss (GAN-D), which jointly enforces Gy and T(Gx) to follow a similar topological pattern but may not necessarily the same."}, {"text_id": "SJlERxAm67", "sid": 31, "sentence": "Specifically, L1 makes T(Gx) share the same rough outline of sparsity pattern like Gy, while under this outline, adversarial loss allows the T(Gx) to vary to some degree."}, {"text_id": "SJlERxAm67", "sid": 32, "sentence": "(2) Combining L1 loss and adversarial loss is well-recognized and validated."}, {"text_id": "SJlERxAm67", "sid": 33, "sentence": "Works on image-translation have proposed and utilized L1 loss and adversarial loss jointly in GAN, for example, reference [1] (with 600+ citations) and reference [2] (with 1300+ citations)."}, {"text_id": "SJlERxAm67", "sid": 34, "sentence": "They have done extensive experiments to show the advantage of such a strategy."}, {"text_id": "SJlERxAm67", "sid": 35, "sentence": "Furthermore, in our experiments, we found the performance when using L1 loss and adversarial loss jointly is better than using either of them."}, {"text_id": "SJlERxAm67", "sid": 36, "sentence": "------[1] Pathak, D., Krahenbuhl, P., Donahue, J., Darrell, T., & Efros, A. A. (2016). Context encoders: Feature learning by inpainting. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (pp. 2536-2544)."}, {"text_id": "SJlERxAm67", "sid": 37, "sentence": "------[2]"}, {"text_id": "SJlERxAm67", "sid": 38, "sentence": "Isola, P., Zhu, J. Y., Zhou, T., & Efros, A. A. (2017). Image-to-image translation with conditional adversarial networks. arXiv preprint."}, {"text_id": "SJlERxAm67", "sid": 39, "sentence": "-----------------------------------------------------------------"}, {"text_id": "SJlERxAm67", "sid": 40, "sentence": "Q: Third, and slightly related to the previous point, why do you need a conditional GAN discriminator, if you already model similarity by L1?"}, {"text_id": "SJlERxAm67", "sid": 41, "sentence": "Typically one would use a GAN-D() to model \"proximity\" to the source-distribution, and then a similarity loss (L1 in your case) to model \"proximity\" to the actual input sample, in the case of traditional domains."}, {"text_id": "SJlERxAm67", "sid": 42, "sentence": "Instead, here you seem to suggest using L1 and GAN to do basically the same thing, or with significant overlap anyways."}, {"text_id": "SJlERxAm67", "sid": 43, "sentence": "This is confusing to me."}, {"text_id": "SJlERxAm67", "sid": 44, "sentence": "Please explain the logic for this architectural choice."}, {"text_id": "SJlERxAm67", "sid": 45, "sentence": "A:(1) The logic of using both of them has been explained in the answer to the last question."}, {"text_id": "SJlERxAm67", "sid": 46, "sentence": "(2) The logic has been well-utilized and verified in the image-translation domain. Again please see the details in the answer to the last question."}, {"text_id": "SJlERxAm67", "sid": 47, "sentence": "(3)"}, {"text_id": "SJlERxAm67", "sid": 48, "sentence": "Our ablation experiment also demonstrates the similar advantage of using both losses for graph translation than only using L1 loss."}, {"text_id": "SJlERxAm67", "sid": 49, "sentence": "Specifically, the proposed GT-GAN that uses both loses outperformed the S-Generator that only uses L1 loss on all three datasets by 10% in accuracy on average as shown in Table 2,3 and 4."}, {"text_id": "SJlERxAm67", "sid": 50, "sentence": "-----------------------------------------------------------------"}, {"text_id": "SJlERxAm67", "sid": 51, "sentence": "Q: Four, could you please explain the setting for the \u201cgold standard\u201d experiment. I'd have to assume, for instance, you train a GNN in a supervised way by using both source (non-suspicious) and target (suspicious) behavior, and label accordingly? That said I am not 100% sure of this problem setting."}, {"text_id": "SJlERxAm67", "sid": 52, "sentence": "A: Yes, \u201cgold standard\u201d method is directly trained based on real target graphs instead of generated ones."}, {"text_id": "SJlERxAm67", "sid": 53, "sentence": "Specifically, as you know, all the comparison methods in our paper are generative models which generate graphs, and our experiment is to evaluate how real the generated graphs are."}, {"text_id": "SJlERxAm67", "sid": 54, "sentence": "One way to evaluate this is by \u201cindirect evaluation\u201d, where we use the graphs generated by different comparison methods as training data to train a classifier based on KCNN (see reference (Nikolentzos, et al.,2017) in the paper), and then compare which model generates \u201cmore-real graphs\u201d by testing their corresponding trained classifier on test set which consists of real graphs."}, {"text_id": "SJlERxAm67", "sid": 55, "sentence": "In \u201cgold standard\u201d method, it directly uses the real graphs to train the classifier (still based on KCNN), so it is expected to get the best performance."}, {"text_id": "SJlERxAm67", "sid": 56, "sentence": "Therefore, \u201cgold standard\u201d method acts as the \u201cbest-possible-performer\u201d, and is used as a benchmark to evaluate all the different generative models on how \u201creal\u201d the graphs they can generate: the closer (and better) their performance is to the \u201cgold standard\u201d one, the \u201cmore real\u201d their generated graphs are."}, {"text_id": "SJlERxAm67", "sid": 57, "sentence": "We hope we were able to answer everything to your satisfaction, please let us know if there are any more open points."}, {"text_id": "SJlERxAm67", "sid": 58, "sentence": "Thank you once again!"}], "rebuttallabels": [{"labels": {"alignments": [], "responsetype": "social", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 0}, {"labels": {"alignments": [], "responsetype": "social", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 1}, {"labels": {"alignments": [], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 2}, {"labels": {"alignments": [13], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 3}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 4}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 5}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 6}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 7}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 8}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 9}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 10}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 11}, {"labels": {"alignments": [13], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 12}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 13}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 14}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 15}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 16}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 17}, {"labels": {"alignments": [13], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 18}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 19}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 20}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 21}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 22}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 23}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 24}, {"labels": {"alignments": [13], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 25}, {"labels": {"alignments": [], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 26}, {"labels": {"alignments": [14], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 27}, {"labels": {"alignments": [14], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 28}, {"labels": {"alignments": [14], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 29}, {"labels": {"alignments": [14], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 30}, {"labels": {"alignments": [14], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 31}, {"labels": {"alignments": [14], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 32}, {"labels": {"alignments": [14], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 33}, {"labels": {"alignments": [14], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 34}, {"labels": {"alignments": [14], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 35}, {"labels": {"alignments": [], "responsetype": "other", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 36}, {"labels": {"alignments": [], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 37}, {"labels": {"alignments": [], "responsetype": "other", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 38}, {"labels": {"alignments": [], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 39}, {"labels": {"alignments": [15], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 40}, {"labels": {"alignments": [16], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 41}, {"labels": {"alignments": [17], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 42}, {"labels": {"alignments": [18], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 43}, {"labels": {"alignments": [19], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 44}, {"labels": {"alignments": [15, 16, 17, 18, 19], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 45}, {"labels": {"alignments": [15, 16, 17, 18, 19], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 46}, {"labels": {"alignments": [], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 47}, {"labels": {"alignments": [15, 16, 17, 18, 19], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 48}, {"labels": {"alignments": [15, 16, 17, 18, 19], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 49}, {"labels": {"alignments": [], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 50}, {"labels": {"alignments": [20], "responsetype": "structuring", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 51}, {"labels": {"alignments": [20], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 52}, {"labels": {"alignments": [20], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 53}, {"labels": {"alignments": [20], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 54}, {"labels": {"alignments": [20], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 55}, {"labels": {"alignments": [20], "responsetype": "answer", "coarseresponse": "concur"}, "text_id": "SJlERxAm67", "sid": 56}, {"labels": {"alignments": [], "responsetype": "social", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 57}, {"labels": {"alignments": [], "responsetype": "social", "coarseresponse": "nonarg"}, "text_id": "SJlERxAm67", "sid": 58}], "metadata": {"anno": "anno10", "review": "ryl8Oq-53X", "rebuttal": "SJlERxAm67", "conference": "ICLR2019", "title": "DEEP GRAPH TRANSLATION", "reviewer": "AnonReviewer3", "forum_id": "SJz6MnC5YQ", "rating": "5: Marginally below acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}}